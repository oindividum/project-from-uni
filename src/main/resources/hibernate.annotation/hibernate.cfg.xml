<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<!-- Version 8 MySQL hiberante-cfg.xml example for Hibernate 5 -->
<hibernate-configuration>
    <session-factory>
        <!-- Connection Properties-->
        <!-- <session-factory>: Вложенный элемент, который содержит настройки для создания фабрики сессий (SessionFactory).
        SessionFactory отвечает за управление сессиями Hibernate, через которые происходит взаимодействие с базой данных.-->
        <!-- Параметры подключения к базе данных-->
        <property name="connection.driver_class">org.h2.Driver</property>
        <property name="connection.url">jdbc:h2:./data/db</property>
        <property name="connection.username">sa</property>
        <property name="connection.password"/>
        <!-- Hibernate Properties-->
        <property name="dialect">org.hibernate.dialect.H2Dialect</property>
        <property name="show_sql">true</property>
        <!-- Если true Hibernate будет выводить все SQL-запросы на консоль (удобно для отладки).-->
        <property name="format_sql">true</property>
        <!-- Если true, SQL-запросы будут форматироваться для удобного чтения в консоли.-->
        <property name="hbm2ddl.auto">update</property>
        <!-- Определяет, что делать с таблицами базы данных при запуске программы:
    update: Обновляет таблицы, если структура изменилась (используется здесь).-->

        <!-- Mapping Properties-->
        <mapping class="hibernate.using.annotation.Person"/>
        <!-- Указывает Hibernate, что класс Person должен быть связан с таблицей в базе данных.-->
    </session-factory>
</hibernate-configuration>